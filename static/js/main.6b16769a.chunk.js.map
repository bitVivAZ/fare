{"version":3,"sources":["css/SubtaskText.module.css","css/TodoCardTitle.module.css","css/AddTodoCard.module.css","css/Board.module.css","context/createDataContext.js","api/fareApi.js","context/TodoCardContext.js","components/EditableTodoCardTitle.js","components/EditableTodoCardDescription.js","context/SubtaskContext.js","components/EditableSubtaskText.js","components/Subtask.js","components/EditableSubtaskList.js","components/TodoCard.js","components/AddTodoCard.js","components/Board.js","App.js","serviceWorker.js","index.js","css/Subtask.module.css","css/TodoCard.module.css","css/TodoCardDescription.module.css"],"names":["module","exports","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","axios","create","baseURL","createDataContext","action","type","payload","getTodoCards","a","fareApi","get","todoCards","data","deleteTodoCard","id","delete","toggleTodoCardCompleted","completed","patch","changeTodoCardTitle","title","changeTodoCardDescription","description","addTodoCard","post","Title","Typography","EditableTodoCardTitle","text","size","callback","idOfTodoCard","disabled","useState","isEditing","setIsEditing","newTitle","setNewTitle","useEffect","className","styles","todoCardTitle","onOutsideClick","placeholder","onChange","e","target","handleOnChange","onKeyPress","handleOnKeyPress","style","textAlign","onDoubleClick","level","Text","TextArea","Input","EditableTodoCardDescription","newDescription","setNewDescription","todoCardDescription","autoSize","minRows","whiteSpace","strong","getSubtasks","subtasks","addSubtask","uuidv4","deleteSubtask","editSubtask","EditableSubtaskText","newText","setNewText","subtaskText","Subtask","useContext","isHovering","setIsHovering","subtaskContainer","onMouseEnter","onMouseLeave","subtask","checkbox","checked","deleteIcon","DeleteOutlined","onClick","EditableTodoList","setTitle","map","TodoCard","cardId","cardTitle","cardDescription","cardSubtasks","cardCompleted","loading","setLoading","card","CheckOutlined","tickComplete","EditableSubtaskList","AddTodoCard","setDescription","PlusOutlined","marginTop","Board","board","gutter","xs","sm","md","lg","xl","Card","_id","renderTodoCards","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,MAAQ,uB,oPCCX,WAACC,EAASC,EAASC,GAChC,IAAMC,EAAUC,IAAMC,gBAiBtB,MAAO,CAAEF,UAASG,SAfD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,qBAAWR,EAASE,GADb,mBAC1BO,EAD0B,KACnBC,EADmB,KAG3BC,EAAe,GACrB,IAAK,IAAIC,KAAOX,EACdU,EAAaC,GAAOX,EAAQW,GAAKF,GAGnC,OACE,kBAACP,EAAQG,SAAT,CAAkBO,MAAK,aAAIJ,SAAUE,IAClCJ,M,SCbMO,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,sC,EC+D0BC,GA/DjB,SAACR,EAAOS,GAC1B,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOE,QAChB,QACE,OAAOX,KA4DX,CACEY,aAzDiB,SAACX,GACpB,6BAAO,4BAAAY,EAAA,sEACmBC,EAAQC,IAAI,cAD/B,OACCC,EADD,OAELf,EAAS,CACPS,KAAM,gBACNC,QAASK,EAAUC,OAJhB,4CAyDLC,eAhDmB,SAACjB,GACtB,8CAAO,WAAOkB,GAAP,SAAAN,EAAA,sEACCC,EAAQM,OAAO,aAAc,CACjCH,KAAM,CAAEE,QAFL,2CAAP,uDAgDEE,wBAzC4B,SAACpB,GAC/B,8CAAO,WAAOkB,EAAIG,GAAX,SAAAT,EAAA,sEACCC,EAAQS,MAAM,aAAc,CAChCJ,KACAG,cAHG,2CAAP,yDAyCEE,oBAjCwB,SAACvB,GAC3B,8CAAO,WAAOkB,EAAIM,GAAX,SAAAZ,EAAA,sEACCC,EAAQS,MAAM,aAAc,CAChCJ,KACAM,UAHG,2CAAP,yDAiCEC,0BAzB8B,SAACzB,GACjC,8CAAO,WAAOkB,EAAIQ,GAAX,SAAAd,EAAA,sEACCC,EAAQS,MAAM,aAAc,CAChCJ,KACAQ,gBAHG,2CAAP,yDAyBEC,YAjBgB,SAAC3B,GACnB,8CAAO,WAAOwB,EAAOE,GAAd,SAAAd,EAAA,sEACCC,EAAQe,KAAK,aAAc,CAC/BJ,QACAE,gBAHG,2CAAP,0DAkBA,IAVajC,E,EAAAA,QAASG,E,EAAAA,S,uEC7DhBiC,EAAUC,IAAVD,MAuEOE,EArEe,SAAC,GAMxB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SACI,EAC8BC,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,OAE4BF,mBAASL,GAFrC,mBAEGQ,EAFH,KAEaC,EAFb,KA6BJ,OANAC,qBAAU,WACJF,IAAaR,GAASM,GACxBJ,EAASC,EAAcK,KAExB,CAACN,EAAUC,EAAcK,EAAUR,EAAMM,IAExCA,EAEA,yBAAKK,UAAWC,IAAOC,eACrB,kBAAC,IAAD,CACEC,eAAgB,WA5BtBP,GAAa,KAgCP,kBAAC,IAAD,CACEQ,YAAY,OACZ5C,MAAOqC,EACPQ,SAAU,SAACC,GAAD,OAhCG,SAACA,GACtBR,EAAYQ,EAAEC,OAAO/C,OA+BIgD,CAAeF,IAChCG,WAAY,SAACH,GAAD,OA7BG,SAACA,GACxB,OAAQA,EAAE/C,KACR,IAAK,QACHqC,GAAa,GACb,MACF,QACEA,GAAa,IAuBUc,CAAiBJ,QAQ5C,6BACE,kBAACpB,EAAD,CACEyB,MAAO,CAAEC,UAAW,UACpBC,cAAe,WACbjB,GAAcH,IAEhBqB,MAAOxB,GAENO,K,iBCjEDkB,EAAS5B,IAAT4B,KAEAC,EAAaC,IAAbD,SAwDOE,EAvDqB,SAAC,GAK9B,IAJL7B,EAII,EAJJA,KACAE,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SACI,EAC8BC,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,OAEwCF,mBAASL,GAFjD,mBAEG8B,EAFH,KAEmBC,EAFnB,KAkBJ,OANArB,qBAAU,WACJoB,IAAmB9B,GAASM,GAC9BJ,EAASC,EAAc2B,KAExB,CAAC5B,EAAUC,EAAc2B,EAAgB9B,EAAMM,IAE9CA,EAEA,yBAAKK,UAAWC,IAAOoB,qBACrB,kBAAC,IAAD,CACElB,eAAgB,WAjBtBP,GAAa,KAqBP,kBAACoB,EAAD,CACEhB,UAAWC,IAAOZ,KAClBiC,SAAU,CAAEC,QAAS,GACrBnB,YAAY,OACZ5C,MAAO2D,EACPd,SAAU,SAACC,GAAD,OAvBG,SAACA,GACtBc,EAAkBd,EAAEC,OAAO/C,OAsBFgD,CAAeF,QAQxC,yBACEN,UAAWC,IAAOoB,oBAClBR,cAAe,kBAAMjB,GAAcH,KAEnC,kBAACsB,EAAD,CAAMJ,MAAO,CAAEa,WAAY,YAAcC,QAAM,GAC5CN,K,oBCT4BvD,GA5Cd,SAACR,EAAOS,GAGzB,OAFIA,EAAOC,KAEJV,IA2CX,CAAEsE,YAvCgB,SAACrE,GACnB,8CAAO,WAAOmC,GAAP,eAAAvB,EAAA,sEACkBC,EAAQC,IAAR,qBAA0BqB,EAA1B,cADlB,OACCmC,EADD,OAELtE,EAAS,CACPS,KAAM,eACNC,QAAS4D,EAAStD,OAJf,2CAAP,uDAsCeuD,WA7BE,SAACvE,GAClB,8CAAO,WAAOmC,EAAcX,GAArB,SAAAZ,EAAA,sEACCC,EAAQe,KAAR,qBAA2BO,EAA3B,aAAoD,CACxDjB,GAAIsD,cACJhD,UAHG,2CAAP,yDA4B2BiD,cApBP,SAACzE,GACrB,8CAAO,WAAOmC,EAAcjB,GAArB,SAAAN,EAAA,sEACCC,EAAQM,OAAR,qBAA6BgB,EAA7B,aAAsD,CAC1DnB,KAAM,CAAEE,QAFL,2CAAP,yDAmB0CwD,YAZxB,SAAC1E,GACnB,8CAAO,WAAOmC,EAAcjB,EAAIM,EAAOH,GAAhC,SAAAT,EAAA,sEACCC,EAAQS,MAAR,qBAA4Ba,EAA5B,aAAqD,CACzDjB,KACAM,QACAH,cAJG,2CAAP,8DAYA,IAHa5B,E,EAAAA,QAASG,E,EAAAA,S,kBC3ChB8D,EAAS5B,IAAT4B,KAuEOiB,EArEa,SAAC,GAOtB,IANL3C,EAMI,EANJA,KACAG,EAKI,EALJA,aACAjB,EAII,EAJJA,GACAG,EAGI,EAHJA,UACAa,EAEI,EAFJA,SACAE,EACI,EADJA,SACI,EAC8BC,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,OAE0BF,mBAASL,GAFnC,mBAEG4C,EAFH,KAEYC,EAFZ,KA6BJ,OANAnC,qBAAU,WACJkC,IAAY5C,GAASM,GACvBJ,EAASC,EAAcjB,EAAI0D,EAASvD,KAErC,CAACa,EAAUC,EAAcjB,EAAI0D,EAAS5C,EAAMX,EAAWiB,IAEtDA,EAEA,yBAAKK,UAAWC,IAAOkC,aACrB,kBAAC,IAAD,CACEhC,eAAgB,WA5BtBP,GAAa,KAgCP,kBAAC,IAAD,CACEQ,YAAY,OACZ5C,MAAOyE,EACP5B,SAAU,SAACC,GAAD,OAhCG,SAACA,GACtB4B,EAAW5B,EAAEC,OAAO/C,OA+BKgD,CAAeF,IAChCG,WAAY,SAACH,GAAD,OA7BG,SAACA,GACxB,OAAQA,EAAE/C,KACR,IAAK,QACHqC,GAAa,GACb,MACF,QACEA,GAAa,IAuBUc,CAAiBJ,QAO5C,yBAAKN,UAAWC,IAAOkC,aACrB,kBAAC,EAAD,CACEV,QAAM,EACNjD,OAAQE,EACRmC,cAAe,WACbjB,GAAcH,KAGfwC,K,iBCvBMG,EAxCC,SAAC,GAAsD,IAApD5C,EAAmD,EAAnDA,aAAcjB,EAAqC,EAArCA,GAAIM,EAAiC,EAAjCA,MAAOH,EAA0B,EAA1BA,UAAWe,EAAe,EAAfA,SAAe,EAC7B4C,qBAAWvF,GAA1CiF,EAD4D,EAC5DA,YAAaD,EAD+C,EAC/CA,cAD+C,EAEhCpC,oBAAS,GAFuB,mBAE7D4C,EAF6D,KAEjDC,EAFiD,KAUpE,OACE,yBACEvC,UAAWC,IAAOuC,iBAClBC,aAAc,kBAAMF,GAAc,IAClCG,aAAc,kBAAMH,GAAc,KAElC,yBAAKvC,UAAWC,IAAO0C,SACrB,kBAAC,IAAD,CACE3C,UAAWC,IAAO2C,SAClBC,QAASnE,EACT2B,SAAU,WAfXZ,GACHsC,EAAYvC,EAAcjB,EAAIM,GAAQH,MAgBpC,kBAAC,EAAD,CACEW,KAAMR,EACNW,aAAcA,EACdjB,GAAIA,EACJG,UAAWA,EACXa,SAAUwC,EACVtC,SAAUA,KAGb6C,IAAe7C,EACd,yBAAKO,UAAWC,IAAO6C,YACrB,kBAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAMlB,EAActC,EAAcjB,OAE3D,OCgBK0E,EApDU,SAAC,GAA0C,IAAxCtB,EAAuC,EAAvCA,SAAUnC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC1CmC,EAAeS,qBAAWvF,GAA1B8E,WADyD,EAEvClC,mBAAS,IAF8B,mBAE1Db,EAF0D,KAEnDqE,EAFmD,KAuBjE,OACE,oCACE,kBAAC,IAAD,CAAqB/C,eAAgB,WApBvC+C,EAAS,MAqBL,kBAAC,IAAD,CACE9C,YAAY,UACZ5C,MAAOqB,EACPY,SAAUA,EACVY,SAAU,SAACC,GAAD,OAtBK,SAACA,GACtB4C,EAAS5C,EAAEC,OAAO/C,OAqBKgD,CAAeF,IAChCG,WAAY,SAACH,GAAD,OAnBK,SAACA,GACxB,OAAQA,EAAE/C,KACR,IAAK,QACHqE,EAAWpC,EAAcX,GACzBqE,EAAS,KAeYxC,CAAiBJ,OAGvCqB,EAASwB,KAAI,SAACR,GAAa,IAClBpE,EAAyBoE,EAAzBpE,GAAIM,EAAqB8D,EAArB9D,MAAOH,EAAciE,EAAdjE,UACnB,OACE,yBAAKnB,IAAKgB,GACR,kBAAC,EAAD,CACEA,GAAIA,EACJM,MAAOA,EACPH,UAAWA,EACXc,aAAcA,EACdC,SAAUA,UCqBT2D,EA7DE,SAAC,GAMX,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cACI,EAMApB,qBAAWvF,GAJbwB,EAFE,EAEFA,eACAG,EAHE,EAGFA,wBACAG,EAJE,EAIFA,oBACAE,EALE,EAKFA,0BALE,EAO0BY,oBAAS,GAPnC,mBAOGgE,EAPH,KAOYC,EAPZ,KAaJ,OAJA5D,qBAAU,WACR4D,GAAW,KACV,IAGD,yBAAK3D,UAAWyD,EAAgBxD,IAAOwD,cAAgBxD,IAAO2D,MAC5D,kBAAC,IAAD,CACEhH,QAAS,CACP,kBAACmG,EAAA,EAAD,CACExF,IAAI,SACJyF,QAAS,kBAAM1E,EAAe+E,MAEhC,kBAACQ,EAAA,EAAD,CACE7D,UAAWyD,EAAgBxD,IAAO6D,aAAe,KACjDvG,IAAI,WACJyF,QAAS,kBAAMvE,EAAwB4E,GAASI,QAIpD,kBAAC,IAAD,CAAUC,QAASA,GACjB,6BACE,kBAAC,EAAD,CACErE,KAAMiE,EACNhE,KAAM,EACNC,SAAUX,EACVY,aAAc6D,EACd5D,SAAUgE,KAGd,kBAAC,EAAD,CACEpE,KAAMkE,EACNhE,SAAUT,EACVU,aAAc6D,EACd5D,SAAUgE,IAEZ,kBAACM,EAAD,CACEpC,SAAU6B,EACVhE,aAAc6D,EACd5D,SAAUgE,Q,2BCxDdvE,GAAUC,IAAVD,MACA8B,GAAaC,IAAbD,SA6COgD,GA3CK,WAAO,IACjBhF,EAAgBqD,qBAAWvF,GAA3BkC,YADgB,EAEMU,oBAAS,GAFf,mBAEjBgE,EAFiB,KAERC,EAFQ,OAGEjE,mBAAS,IAHX,mBAGjBb,EAHiB,KAGVqE,EAHU,OAIcxD,mBAAS,IAJvB,mBAIjBX,EAJiB,KAIJkF,EAJI,KAgBxB,OAJAlE,qBAAU,WACR4D,GAAW,KACV,CAACA,IAGF,yBAAK3D,UAAWC,IAAOjB,aACrB,kBAAC,IAAD,CACEpC,QAAS,CAAC,kBAACsH,EAAA,EAAD,CAAc3G,IAAI,MAAMyF,QAAS,kBAZ/ChE,EAAYH,EAAOE,GACnBmE,EAAS,SACTe,EAAe,SAYX,kBAAC,IAAD,CAAUP,QAASA,GACjB,kBAAC,GAAD,CAAO/C,MAAO,CAAEC,UAAW,UAAYE,MAAO,GAA9C,iBAGA,kBAAC,IAAD,CACEV,YAAY,QACZ5C,MAAOqB,EACPwB,SAAU,SAACC,GAAD,OAAO4C,EAAS5C,EAAEC,OAAO/C,UAErC,kBAAC,GAAD,CACEmD,MAAO,CAAEwD,UAAW,IACpB/D,YAAY,wBACZkB,SAAU,CAAEC,QAAS,GACrB/D,MAAOuB,EACPsB,SAAU,SAACC,GAAD,OAAO2D,EAAe3D,EAAEC,OAAO/C,c,uCCCtC4G,GAnBD,WAAO,IAAD,EACc/B,qBAAWvF,GAAnCM,EADU,EACVA,MAAOY,EADG,EACHA,aAMf,OAJA+B,qBAAU,WACR/B,MACC,CAACA,IAGF,yBAAKgC,UAAWC,KAAOoE,OACrB,kBAAC,KAAD,CAAKC,OAAQ,CAAC,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAM,IAAK3G,KAAK,QAChD,kBAAC,KAAD,CAAKP,IAAI,cAAcgH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxD,kBAAC,GAAD,OA9Bc,SAACvH,GAgBvB,OAfgBA,EAAM+F,KAAI,SAACyB,GAAU,IAC3BC,EAAiDD,EAAjDC,IAAKhG,EAA4C+F,EAA5C/F,MAAOE,EAAqC6F,EAArC7F,YAAaL,EAAwBkG,EAAxBlG,UAAWiD,EAAaiD,EAAbjD,SAC5C,OACE,kBAAC,KAAD,CAAKpE,IAAKsH,EAAKN,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAChD,kBAAC,EAAD,CACEtB,OAAQwB,EACRvB,UAAWzE,EACX0E,gBAAiBxE,EACjByE,aAAc7B,EACd8B,cAAe/E,QAsBhBoG,CAAgB1H,M,OCjCzB,SAAS2H,KACP,OACE,yBAAK/E,UAAU,OACb,kBAAC,GAAD,OAKS,kBACb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SCNYgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBExI5B1J,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,SAAW,0BAA0B,KAAO,sBAAsB,QAAU,yBAAyB,WAAa,8B,mBCAzLD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,cAAgB,gCAAgC,aAAe,iC,mBCA/GD,EAAOC,QAAU,CAAC,oBAAsB,oD","file":"static/js/main.6b16769a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtaskText\":\"SubtaskText_subtaskText__2cLil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoCardTitle\":\"TodoCardTitle_todoCardTitle__2lxdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTodoCard\":\"AddTodoCard_addTodoCard__374OP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__19xHb\"};","import React, { useReducer } from \"react\";\n\nexport default (reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://fare-server.herokuapp.com\",\n});\n","import createDataContext from \"./createDataContext\";\nimport fareApi from \"../api/fareApi\";\n\nconst TodoReducer = (state, action) => {\n  switch (action.type) {\n    case \"get_todoCards\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst getTodoCards = (dispatch) => {\n  return async () => {\n    const todoCards = await fareApi.get(\"/todocards\");\n    dispatch({\n      type: \"get_todoCards\",\n      payload: todoCards.data,\n    });\n  };\n};\n\nconst deleteTodoCard = (dispatch) => {\n  return async (id) => {\n    await fareApi.delete(\"/todocards\", {\n      data: { id },\n    });\n  };\n};\n\nconst toggleTodoCardCompleted = (dispatch) => {\n  return async (id, completed) => {\n    await fareApi.patch(\"/todocards\", {\n      id,\n      completed,\n    });\n  };\n};\n\nconst changeTodoCardTitle = (dispatch) => {\n  return async (id, title) => {\n    await fareApi.patch(\"/todocards\", {\n      id,\n      title,\n    });\n  };\n};\n\nconst changeTodoCardDescription = (dispatch) => {\n  return async (id, description) => {\n    await fareApi.patch(\"/todocards\", {\n      id,\n      description,\n    });\n  };\n};\n\nconst addTodoCard = (dispatch) => {\n  return async (title, description) => {\n    await fareApi.post(\"/todocards\", {\n      title,\n      description,\n    });\n  };\n};\n\nexport const { Context, Provider } = createDataContext(\n  TodoReducer,\n  {\n    getTodoCards,\n    deleteTodoCard,\n    toggleTodoCardCompleted,\n    changeTodoCardTitle,\n    changeTodoCardDescription,\n    addTodoCard,\n  },\n  []\n);\n","import React, { useState, useEffect } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { Input, Typography } from \"antd\";\nimport styles from \"../css/TodoCardTitle.module.css\";\n\nconst { Title } = Typography;\n\nconst EditableTodoCardTitle = ({\n  text,\n  size,\n  callback,\n  idOfTodoCard,\n  disabled,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(text);\n\n  const handleOnOutsideClick = () => {\n    setIsEditing(false);\n  };\n\n  const handleOnChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleOnKeyPress = (e) => {\n    switch (e.key) {\n      case \"Enter\":\n        setIsEditing(false);\n        break;\n      default:\n        setIsEditing(true);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (newTitle !== text && !isEditing) {\n      callback(idOfTodoCard, newTitle);\n    }\n  }, [callback, idOfTodoCard, newTitle, text, isEditing]);\n\n  if (isEditing) {\n    return (\n      <div className={styles.todoCardTitle}>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            handleOnOutsideClick();\n          }}\n        >\n          <Input\n            placeholder=\"text\"\n            value={newTitle}\n            onChange={(e) => handleOnChange(e)}\n            onKeyPress={(e) => handleOnKeyPress(e)}\n          />\n        </OutsideClickHandler>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Title\n        style={{ textAlign: \"center\" }}\n        onDoubleClick={() => {\n          setIsEditing(!disabled);\n        }}\n        level={size}\n      >\n        {newTitle}\n      </Title>\n    </div>\n  );\n};\n\nexport default EditableTodoCardTitle;\n","import React, { useState, useEffect } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { Input, Typography } from \"antd\";\nimport styles from \"../css/TodoCardDescription.module.css\";\n\nconst { Text } = Typography;\n\nconst { TextArea } = Input;\nconst EditableTodoCardDescription = ({\n  text,\n  callback,\n  idOfTodoCard,\n  disabled,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newDescription, setNewDescription] = useState(text);\n\n  const handleOnOutsideClick = () => {\n    setIsEditing(false);\n  };\n\n  const handleOnChange = (e) => {\n    setNewDescription(e.target.value);\n  };\n\n  useEffect(() => {\n    if (newDescription !== text && !isEditing) {\n      callback(idOfTodoCard, newDescription);\n    }\n  }, [callback, idOfTodoCard, newDescription, text, isEditing]);\n\n  if (isEditing) {\n    return (\n      <div className={styles.todoCardDescription}>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            handleOnOutsideClick();\n          }}\n        >\n          <TextArea\n            className={styles.text}\n            autoSize={{ minRows: 2 }}\n            placeholder=\"text\"\n            value={newDescription}\n            onChange={(e) => handleOnChange(e)}\n          />\n        </OutsideClickHandler>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.todoCardDescription}\n      onDoubleClick={() => setIsEditing(!disabled)}\n    >\n      <Text style={{ whiteSpace: \"pre-wrap\" }} strong>\n        {newDescription}\n      </Text>\n    </div>\n  );\n};\n\nexport default EditableTodoCardDescription;\n","import createDataContext from \"./createDataContext\";\nimport fareApi from \"../api/fareApi\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst subtaskReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst getSubtasks = (dispatch) => {\n  return async (idOfTodoCard) => {\n    const subtasks = await fareApi.get(`/todocards/${idOfTodoCard}/subtasks`);\n    dispatch({\n      type: \"get_subtasks\",\n      payload: subtasks.data,\n    });\n  };\n};\n\nconst addSubtask = (dispatch) => {\n  return async (idOfTodoCard, title) => {\n    await fareApi.post(`/todocards/${idOfTodoCard}/subtasks`, {\n      id: uuidv4(),\n      title,\n    });\n  };\n};\n\nconst deleteSubtask = (dispatch) => {\n  return async (idOfTodoCard, id) => {\n    await fareApi.delete(`/todocards/${idOfTodoCard}/subtasks`, {\n      data: { id },\n    });\n  };\n};\n\nconst editSubtask = (dispatch) => {\n  return async (idOfTodoCard, id, title, completed) => {\n    await fareApi.patch(`/todocards/${idOfTodoCard}/subtasks`, {\n      id,\n      title,\n      completed,\n    });\n  };\n};\n\nexport const { Context, Provider } = createDataContext(\n  subtaskReducer,\n  { getSubtasks, addSubtask, deleteSubtask, editSubtask },\n  []\n);\n","import React, { useState, useEffect } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { Input, Typography } from \"antd\";\nimport styles from \"../css/SubtaskText.module.css\";\n\nconst { Text } = Typography;\n\nconst EditableSubtaskText = ({\n  text,\n  idOfTodoCard,\n  id,\n  completed,\n  callback,\n  disabled,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newText, setNewText] = useState(text);\n\n  const handleOnOutsideClick = () => {\n    setIsEditing(false);\n  };\n\n  const handleOnChange = (e) => {\n    setNewText(e.target.value);\n  };\n\n  const handleOnKeyPress = (e) => {\n    switch (e.key) {\n      case \"Enter\":\n        setIsEditing(false);\n        break;\n      default:\n        setIsEditing(true);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (newText !== text && !isEditing) {\n      callback(idOfTodoCard, id, newText, completed);\n    }\n  }, [callback, idOfTodoCard, id, newText, text, completed, isEditing]);\n\n  if (isEditing) {\n    return (\n      <div className={styles.subtaskText}>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            handleOnOutsideClick();\n          }}\n        >\n          <Input\n            placeholder=\"text\"\n            value={newText}\n            onChange={(e) => handleOnChange(e)}\n            onKeyPress={(e) => handleOnKeyPress(e)}\n          />\n        </OutsideClickHandler>\n      </div>\n    );\n  }\n  return (\n    <div className={styles.subtaskText}>\n      <Text\n        strong\n        delete={completed}\n        onDoubleClick={() => {\n          setIsEditing(!disabled);\n        }}\n      >\n        {newText}\n      </Text>\n    </div>\n  );\n};\n\nexport default EditableSubtaskText;\n","import React, { useContext, useState } from \"react\";\nimport { Checkbox } from \"antd\";\nimport { Context } from \"../context/SubtaskContext\";\nimport EditableSubtaskText from \"./EditableSubtaskText\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport styles from \"../css/Subtask.module.css\";\n\nconst Subtask = ({ idOfTodoCard, id, title, completed, disabled }) => {\n  const { editSubtask, deleteSubtask } = useContext(Context);\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleOnChange = () => {\n    if (!disabled) {\n      editSubtask(idOfTodoCard, id, title, !completed);\n    }\n  };\n\n  return (\n    <div\n      className={styles.subtaskContainer}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      <div className={styles.subtask}>\n        <Checkbox\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => handleOnChange()}\n        />\n        <EditableSubtaskText\n          text={title}\n          idOfTodoCard={idOfTodoCard}\n          id={id}\n          completed={completed}\n          callback={editSubtask}\n          disabled={disabled}\n        />\n      </div>\n      {isHovering && !disabled ? (\n        <div className={styles.deleteIcon}>\n          <DeleteOutlined onClick={() => deleteSubtask(idOfTodoCard, id)} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Subtask;\n","import React, { useState, useContext } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport Subtask from \"./Subtask\";\nimport { Context } from \"../context/SubtaskContext\";\nimport { Input } from \"antd\";\n\nconst EditableTodoList = ({ subtasks, idOfTodoCard, disabled }) => {\n  const { addSubtask } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n\n  const handleOnOutsideClick = () => {\n    setTitle(\"\");\n  };\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleOnKeyPress = (e) => {\n    switch (e.key) {\n      case \"Enter\":\n        addSubtask(idOfTodoCard, title);\n        setTitle(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <OutsideClickHandler onOutsideClick={() => handleOnOutsideClick()}>\n        <Input\n          placeholder=\"Subtask\"\n          value={title}\n          disabled={disabled}\n          onChange={(e) => handleOnChange(e)}\n          onKeyPress={(e) => handleOnKeyPress(e)}\n        />\n      </OutsideClickHandler>\n      {subtasks.map((subtask) => {\n        const { id, title, completed } = subtask;\n        return (\n          <div key={id}>\n            <Subtask\n              id={id}\n              title={title}\n              completed={completed}\n              idOfTodoCard={idOfTodoCard}\n              disabled={disabled}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default EditableTodoList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../css/TodoCard.module.css\";\nimport { Skeleton, Card } from \"antd\";\nimport { Context } from \"../context/TodoCardContext\";\nimport { CheckOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport EditableTodoCardTitle from \"./EditableTodoCardTitle\";\nimport EditableTodoCardDescription from \"./EditableTodoCardDescription\";\nimport EditableSubtaskList from \"./EditableSubtaskList\";\n\nconst TodoCard = ({\n  cardId,\n  cardTitle,\n  cardDescription,\n  cardSubtasks,\n  cardCompleted,\n}) => {\n  const {\n    deleteTodoCard,\n    toggleTodoCardCompleted,\n    changeTodoCardTitle,\n    changeTodoCardDescription,\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  return (\n    <div className={cardCompleted ? styles.cardCompleted : styles.card}>\n      <Card\n        actions={[\n          <DeleteOutlined\n            key=\"remove\"\n            onClick={() => deleteTodoCard(cardId)}\n          />,\n          <CheckOutlined\n            className={cardCompleted ? styles.tickComplete : null}\n            key=\"complete\"\n            onClick={() => toggleTodoCardCompleted(cardId, !cardCompleted)}\n          />,\n        ]}\n      >\n        <Skeleton loading={loading}>\n          <div>\n            <EditableTodoCardTitle\n              text={cardTitle}\n              size={1}\n              callback={changeTodoCardTitle}\n              idOfTodoCard={cardId}\n              disabled={cardCompleted}\n            />\n          </div>\n          <EditableTodoCardDescription\n            text={cardDescription}\n            callback={changeTodoCardDescription}\n            idOfTodoCard={cardId}\n            disabled={cardCompleted}\n          />\n          <EditableSubtaskList\n            subtasks={cardSubtasks}\n            idOfTodoCard={cardId}\n            disabled={cardCompleted}\n          />\n        </Skeleton>\n      </Card>\n    </div>\n  );\n};\n\nexport default TodoCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Skeleton, Card, Input, Typography } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Context } from \"../context/TodoCardContext\";\nimport styles from \"../css/AddTodoCard.module.css\";\n\nconst { Title } = Typography;\nconst { TextArea } = Input;\n\nconst AddTodoCard = () => {\n  const { addTodoCard } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleOnClick = () => {\n    addTodoCard(title, description);\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n\n  useEffect(() => {\n    setLoading(false);\n  }, [setLoading]);\n\n  return (\n    <div className={styles.addTodoCard}>\n      <Card\n        actions={[<PlusOutlined key=\"add\" onClick={() => handleOnClick()} />]}\n      >\n        <Skeleton loading={loading}>\n          <Title style={{ textAlign: \"center\" }} level={2}>\n            Add Todo Card\n          </Title>\n          <Input\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <TextArea\n            style={{ marginTop: 10 }}\n            placeholder=\"Description and notes\"\n            autoSize={{ minRows: 3 }}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Skeleton>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddTodoCard;\n","import React, { useEffect, useContext } from \"react\";\nimport TodoCard from \"./TodoCard\";\nimport AddTodoCard from \"./AddTodoCard\";\nimport { Col, Row } from \"antd\";\nimport { Context } from \"../context/TodoCardContext\";\nimport styles from \"../css/Board.module.css\";\n\nconst renderTodoCards = (state) => {\n  let TodoCards = state.map((Card) => {\n    const { _id, title, description, completed, subtasks } = Card;\n    return (\n      <Col key={_id} xs={24} sm={24} md={12} lg={8} xl={6}>\n        <TodoCard\n          cardId={_id}\n          cardTitle={title}\n          cardDescription={description}\n          cardSubtasks={subtasks}\n          cardCompleted={completed}\n        />\n      </Col>\n    );\n  });\n\n  return TodoCards;\n};\n\nconst Board = () => {\n  const { state, getTodoCards } = useContext(Context);\n\n  useEffect(() => {\n    getTodoCards();\n  }, [getTodoCards]);\n\n  return (\n    <div className={styles.board}>\n      <Row gutter={[{ xs: 0, sm: 0, md: 24 }, 24]} type=\"flex\">\n        <Col key=\"addTodoCard\" xs={24} sm={24} md={12} lg={8} xl={6}>\n          <AddTodoCard />\n        </Col>\n        {renderTodoCards(state)}\n      </Row>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./components/Board.js\";\nimport { Provider as TodoCardProvider } from \"./context/TodoCardContext\";\nimport { Provider as SubtaskProvider } from \"./context/SubtaskContext\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default () => {\n  return (\n    <TodoCardProvider>\n      <SubtaskProvider>\n        <App />\n      </SubtaskProvider>\n    </TodoCardProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtaskContainer\":\"Subtask_subtaskContainer__RyOcZ\",\"checkbox\":\"Subtask_checkbox__2ogbn\",\"text\":\"Subtask_text__3dkNz\",\"subtask\":\"Subtask_subtask__37ANq\",\"deleteIcon\":\"Subtask_deleteIcon__3u9Y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"TodoCard_card__3V_U_\",\"cardCompleted\":\"TodoCard_cardCompleted__3VPCR\",\"tickComplete\":\"TodoCard_tickComplete__31F-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoCardDescription\":\"TodoCardDescription_todoCardDescription__sZ59E\"};"],"sourceRoot":""}